<?php

namespace backend\models;

use common\models\User;
use Yii;

/**
 * This is the model class for table "{{%chi_tiet_don_hang}}".
 *
 * @property int $id
 * @property int|null $product_id
 * @property int|null $so_luong
 * @property int|null $chi_tiet_don_hang_old_id
 * @property float|null $don_gia
 * @property float|null $tong_tien
 * @property string|null $skuid
 * @property string|null $notes
 * @property string|null $sku2info
 * @property string|null $selectedPid
 * @property float|null $ti_le_loi_nhuan
 * @property string|null $cong_thuc_loi_nhuan
 * @property int|null $don_hang_id
 * @property int|null $user_id
 * @property string|null $created
 * @property string|null $props_names
 * @property string|null $images
 * @property string|null $itemID
 * @property string|null $vids
 * @property string|null $props_ids
 * @property int|null $da_chon_de_thanh_toan
 * @property string|null $product_name
 * @property string|null $updated
 * @property int|null $user_updated_id
 * @property int|null $phi_mua_ho
 * @property float|null $tong_tien_cny
 * @property float|null $ty_le_mua_ho
 * @property float|null $price_money
 * @property float|null $phi_kiem_dem
 * @property float|null $ho_tro_kiem_dem
 * @property string|null $props_name
 * @property string|null $skuMap
 * @property string|null $props_name_vn
 *
 * @property DonHang $donHang
 * @property Product $product
 * @property User $user
 * @property User $userUpdated
 */

class ChiTietDonHang extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%chi_tiet_don_hang}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['product_id', 'so_luong', 'don_hang_id', 'user_id', 'da_chon_de_thanh_toan', 'user_updated_id', 'chi_tiet_don_hang_old_id'], 'safe'],
            [['don_gia', 'tong_tien', 'ti_le_loi_nhuan', 'tong_tien_cny', 'price_money'], 'number'],
            [['cong_thuc_loi_nhuan', 'props_names', 'images', 'product_name'], 'string'],
            [['created', 'updated', 'sku2info', 'notes', 'vids', 'phi_kiem_dem', 'ho_tro_kiem_dem',
                'ty_le_mua_ho', 'phi_mua_ho', 'skuMap'], 'safe'],
            [['skuid', 'selectedPid', 'itemID', 'props_ids'], 'string', 'max' => 100],
            [['props_name', 'props_name_vn'], 'string', 'max' => 300],
            [['don_hang_id'], 'exist', 'skipOnError' => true, 'targetClass' => DonHang::className(), 'targetAttribute' => ['don_hang_id' => 'id']],
            [['product_id'], 'exist', 'skipOnError' => true, 'targetClass' => Product::className(), 'targetAttribute' => ['product_id' => 'id']],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['user_id' => 'id']],
            [['user_updated_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['user_updated_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'product_id' => 'Product ID',
            'so_luong' => 'So Luong',
            'don_gia' => 'Don Gia',
            'tong_tien' => 'Tong Tien',
            'skuID' => 'Sku ID',
            'selectedPid' => 'Selected Pid',
            'ti_le_loi_nhuan' => 'Ti Le Loi Nhuan',
            'cong_thuc_loi_nhuan' => 'Cong Thuc Loi Nhuan',
            'don_hang_id' => 'Don Hang ID',
            'user_id' => 'User ID',
            'created' => 'Created',
            'props_names' => 'Props Names',
            'imageUrl' => 'Image Url',
        ];
    }

    /**
     * Gets query for [[DonHang]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getDonHang()
    {
        return $this->hasOne(DonHang::className(), ['id' => 'don_hang_id']);
    }

    /**
     * Gets query for [[Product]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getProduct()
    {
        return $this->hasOne(Product::className(), ['id' => 'product_id']);
    }

    /**
     * Gets query for [[User]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'user_id']);
    }

    /**
     * Gets query for [[UserUpdated]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getUserUpdated()
    {
        return $this->hasOne(User::className(), ['id' => 'user_updated_id']);
    }

    public function beforeSave($insert)
    {
        if($insert && ($this->created == '' || is_null($this->created)))
            $this->created = date("Y-m-d H:i:s");
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

}
