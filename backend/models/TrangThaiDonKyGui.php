<?php

namespace backend\models;

use common\models\User;
use Yii;

/**
 * This is the model class for table "{{%trang_thai_don_ky_gui}}".
 *
 * @property int $id
 * @property int|null $user_id
 * @property string|null $created
 * @property string|null $field_trang_thai
 * @property int|null $field_don_ky_gui_id
 * @property string|null $field_ghi_chu
 *
 * @property KyGui $fieldDonKyGui
 * @property User $user
 */
class TrangThaiDonKyGui extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return '{{%trang_thai_don_ky_gui}}';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['user_id', 'field_don_ky_gui_id'], 'integer'],
            [['created'], 'safe'],
            [['field_trang_thai', 'field_ghi_chu'], 'string'],
            [['field_don_ky_gui_id'], 'exist', 'skipOnError' => true, 'targetClass' => KyGui::className(), 'targetAttribute' => ['field_don_ky_gui_id' => 'id']],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['user_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'user_id' => 'User ID',
            'created' => 'Created',
            'field_trang_thai' => 'Field Trang Thai',
            'field_don_ky_gui_id' => 'Field Don Ky Gui ID',
            'field_ghi_chu' => 'Field Ghi Chu',
        ];
    }

    /**
     * Gets query for [[FieldDonKyGui]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getFieldDonKyGui()
    {
        return $this->hasOne(KyGui::className(), ['id' => 'field_don_ky_gui_id']);
    }

    /**
     * Gets query for [[User]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'user_id']);
    }

    public function beforeSave($insert)
    {
        if($insert && ($this->created == '' || is_null($this->created)))
            $this->created = date("Y-m-d H:i:s");
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        KyGui::updateAll(['field_trang_thai' => $this->field_trang_thai], ['id' => $this->field_don_ky_gui_id]);
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }
}
